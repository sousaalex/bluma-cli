{
    "nativeTools": [
        {
            "type": "function",
            "function": {
                "name": "shell_command",
                "description": "Executes a terminal command in a robust and Windows/Linux compatible way.",
                "parameters": {
                    "type": "object",
                    "properties": {
                        "command": {
                            "type": "string",
                            "description": "Shell command to execute"
                        },
                        "timeout": {
                            "type": "integer",
                            "description": "Maximum execution time in seconds",
                            "default": 20
                        },
                        "cwd": {
                            "type": "string",
                            "description": "Working directory for command execution (must use absolute path)"
                        },
                        "verbose": {
                            "type": "boolean",
                            "description": "If True, returns detailed report; if False, only main output",
                            "default": false
                        }
                    },
                    "required": [
                        "command"
                    ]
                }
            }
        },
        {
            "type": "function",
            "function": {
                "name": "edit_tool",
                "description": "Replaces text within a file. By default, replaces a single occurrence, but can replace multiple occurrences when `expected_replacements` is specified. This tool requires providing significant context around the change to ensure precise targeting. Always use the read file tool to examine the file's current content before attempting a text replacement.\n\nExpectation for required parameters:\n1. `file_path` MUST be an absolute path; otherwise an error will be thrown.\n2. `old_string` MUST be the exact literal text to replace (including all whitespace, indentation, newlines, and surrounding code etc.).\n3. `new_string` MUST be the exact literal text to replace `old_string` with (also including all whitespace, indentation, newlines, and surrounding code etc.). Ensure the resulting code is correct and idiomatic.\n4. NEVER escape `old_string` or `new_string`, that would break the exact literal text requirement.\n**Important:** If ANY of the above are not satisfied, the tool will fail. CRITICAL for `old_string`: Must uniquely identify the single instance to change. Include at least 3 lines of context BEFORE and AFTER the target text, matching whitespace and indentation precisely. If this string matches multiple locations, or does not match exactly, the tool will fail.\n**Multiple replacements:** Set `expected_replacements` to the number of occurrences you want to replace. The tool will replace ALL occurrences that match `old_string` exactly. Ensure the number of replacements matches your expectation.",
                "parameters": {
                    "type": "object",
                    "properties": {
                        "file_path": {
                            "type": "string",
                            "description": "The absolute path to the file to modify. Must start with '/'."
                        },
                        "old_string": {
                            "type": "string",
                            "description": "The exact literal text to replace, preferably unescaped. For single replacements (default), include at least 3 lines of context BEFORE and AFTER the target text, matching whitespace and indentation precisely. For multiple replacements, specify expected_replacements parameter. If this string is not the exact literal text (i.e. you escaped it) or does not match exactly, the tool will fail."
                        },
                        "new_string": {
                            "type": "string",
                            "description": "The exact literal text to replace `old_string` with, preferably unescaped. Provide the EXACT text. Ensure the resulting code is correct and idiomatic."
                        },
                        "expected_replacements": {
                            "type": "integer",
                            "description": "Number of replacements expected. Defaults to 1 if not specified. Use when you want to replace multiple occurrences.",
                            "default": 1
                        }
                    },
                    "required": [
                        "file_path",
                        "old_string",
                        "new_string"
                    ]
                }
            }
        },
        {
            "type": "function",
            "function": {
                "name": "agent_end_task",
                "description": "Ends the current task and logs out of the agent",
                "parameters": {
                    "type": "object",
                    "properties": {},
                    "required": []
                }
            }
        },
        {
            "type": "function",
            "function": {
                "name": "message_notify_dev",
                "description": "Send a message to dev without requiring a response. Use for acknowledging receipt of messages, providing progress updates, reporting task completion, or explaining changes in approach.",
                "parameters": {
                    "type": "object",
                    "properties": {
                        "text_markdown": {
                            "type": "string",
                            "description": "The message content in markdown format"
                        }
                    },
                    "required": [
                        "text_markdown"
                    ]
                }
            }
        }
    ]
}